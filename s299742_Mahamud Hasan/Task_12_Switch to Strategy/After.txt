public enum ePassengerTitle
{
    Mr,
    Mrs,
    Doctor,
}
 
class Program
{
    static void Main(string[] args)
    {
        ePassengerTitle title = ePassengerTitle.Doctor;
        Context.DoAlgorithm(title);
    }
}

public interface IPassengerTitleStrategy
{
    void DoAlgorithm();
}

public class MrPassengerTitleStrategy : IPassengerTitleStrategy
{
    public void DoAlgorithm()
    {
        throw new NotImplementedException();
    }
}
 
public class MrsPassengerTitleStrategy : IPassengerTitleStrategy
{
    public void DoAlgorithm()
    {
        throw new NotImplementedException();
    }
}
 
public class DoctorPassengerTitleStrategy : IPassengerTitleStrategy
{
    public void DoAlgorithm()
    {
        throw new NotImplementedException();
    }
}
 
public class Context
{
    private static Dictionary<ePassengerTitle, IPassengerTitleStrategy> _strategies =
        new Dictionary<ePassengerTitle, IPassengerTitleStrategy>();
 
    public static Context()
    {
        _strategies.Add(ePassengerTitle.Mr, new MrPassengerTitleStrategy());
        _strategies.Add(ePassengerTitle.Mrs, new MrsPassengerTitleStrategy());
        _strategies.Add(ePassengerTitle.Doctor, new DoctorPassengerTitleStrategy());
    }
    
    public static void DoAlgorithm(ePassengerTitle title)
    {
        _strategies[title].DoAlgorithm();
    }
}


